- когда класс нужен только для хранения полей
- меньше кода для определения класса
- нужна поддержка значений по умолчанию
- если требуется readonly объекты

====================================================================================	
from dataclasses import dataclass
@dataclass
class Metric:
	name: str
	description: str
	labels: list
	filepath: str
	data: dict
	registry: CollectorRegistry

====================================================================================	
если мы хотим аннотировать переменную, но не рассматривать ее как часть  __init__:

from dataclasses import dataclass, field

R = 26

@dataclass
class RTrieNode:
	size = R
	value: int

====================================================================================	
from dataclasses import dataclass
from typing import List
from dacite import from_dict
import json


@dataclass
class Pod:
    name: str
    vcsa: list

@dataclass
class List:
    pods: List[Pod]

with open('data.json') as file:
    data = json.load(file)

infra = from_dict(List, data)
print(infra)
for pod in infra.pods:
    if pod.name == 'pd03':
        print(pod.vcsa)

====================================================================================	
====================================================================================	
====================================================================================	
====================================================================================	
