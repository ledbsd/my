#----------------------- git -------------------#

# git init 
# git add .
# git commit -m ""
# git push origin
# git log -1 -p
# git log --pretty=oneline
список изменений в последнем коммите
# git show HEAD

#----------------------- remote repo  ----------#

подключенные репозитории
# git remote -v

изменить подключенный репозиторий
# git remote set-url origin <url>

#----------------------- branch  ---------------#

# git branch <name> && git checkout <name>
# git checkout -b <name>

слить
# git merge <name>

удалить пустую ветку
# git branch -d <name>

удалить ветку с commit
# git branch -D <name>

создать ветку в remote
# git push --set-upstream origin <name>

удалить ветку с remote
# git push origin --delete <name>

скачать конкретную ветку
# git fetch && git branch -r
# git fetch origin develop

если нужно дать новое имя
# git fetch origin develop:myOwnDevelop

#-------------------- конфликты ---------------#

слияния веток
# git merge develop
# git status
# vi filename
# git add filename
# git commit

слияние репо
# git pull --rebase
# git status
# vi filename
# git add filename
# git rebase --continue

прервать Rebase
# git rebase --abort

#----------------------- отмены  ---------------#

откатить изменения на последний comit
# git checkout -- file1.txt

откатить все файлы
# git checkout . 

временно перейти на старую версию
# git checkout <hash>

перейти на коммит назад (можно ^^ и т.д.)
# git checkout HEAD^

отменить git add
# git reset filename

откатить коммиты
# git reset HEAD@{n}
или
# git reset <hash>
изменения остаются, поэтому правим сами
# git checkout filename

изменить последний коммит до пуша в remote
# git commin --amend 

если уже запушили в remote
# git revert HEAD
или 
# git revert <hash>

#----------------------- тэги  -----------------#

поставить тэг на старый коммит
# git tag -a <tag> <hash>

перейти на тэг
# git checkout <tag>

добавить тэг в remote
# git push origin <tag>

добавить все тэги в remote
# git push origin --tags

удалить тэг с remote
# git push origin --delete <tag>
