HTTP протокол

Практика выполняется на monitoring сервере, доступ к нему осуществляется по IP адресу и выполняются с root привилегиями.

Данная проверка предназначена для проверки сервисов с использованием HTTP протокола.

1. Добавляем в конфигурационный файл проверку по HTTP протоколу с именем проверки http_slurm:

cat <<EOF >> /etc/blackbox_exporter/blackbox.yml
  http_slurm:
    prober: http
    timeout: 2s
    http:
      preferred_ip_protocol: ip4
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      fail_if_not_ssl: true
      method: GET
      fail_if_body_not_matches_regexp:
        - "Prometheus"
EOF

В данной конфигурации для проверки используется протокол ip v4, проверяется версия HTTP, код ответа, метод GET. Также проверка закончится с ошибкой, если не используется https или если в ответе отсутствует слово: Prometheus.

2. Чтобы применить изменения, перезапускаем Blackbox Exporter:

systemctl restart blackbox_exporter

3. Проверка.

curl -is "http://localhost:9115/probe?module=http_slurm&target=http://prometheus.io" | grep probe_success

В запросе, в качестве параметра module, передаётся имя проверки, а в качестве параметра target – адрес веб сайта, который проверяется. С помощью grep фильтруем результат, чтобы получить только результат проверки.

NB! Адрес сайта может передаваться вместе со схемой. Если схема не указана, то будет использоваться http.

Результат должен быть таким:

# HELP probe_success Displays whether or not the probe was a success
# TYPE probe_success gauge
probe_success 1

4. Полный список параметров для проверки по HTTP протоколу:

timeout

Default: scrape_timeout

Время, после которого проверка будет считаться неудачной. NB! Если значение не задано, используется scrape_timeout, который передал Prometheus.

preferred_ip_protocol

Default: ip6

Какой протокол используется для проверки. Допустимые значения: ip4| ip6.

source_ip_address

Default: -

Если на сервере несколько IP адресов, можно указать, с какого ip будет проводиться проверка.

valid_status_codes

default: 200

Проверка считается неудачной, если код не соответствует заданному.

valid_http_versions

Проверка считается неудачной, если версия HTTP не соответствует строке.

method

Default: GET

Тип запроса. Возможные значения: GET | POST.

headers

Список заголовков, которые передаются во время проверки.

no_follow_redirects

Default: false

Следовать ли редиректам при проверке.

fail_if_ssl

Deafult: false

Проверка считается неуспешной, если соединение установлено по https.

fail_if_not_ssl

Deafult: false

Проверка считается неуспешной, если соединение установлено без использования https.

fail_if_body_matches_regexp

Проверка считается неуспешной, если в body присутствует строка удовлетворяющая регулярному выражению.

fail_if_body_not_matches_regexp

Проверка считается неуспешной, если в body отсутствует строка удовлетворяющая регулярному выражению.

fail_if_header_matches

Проверка считается неуспешной, если в ответе присутствует заголовок, значение которого удовлетворяет регулярному выражению.

    header – имя заголовка, который проверяется.

    regexp – регулярное выражение, которое проверяется в значении заголовка.

    allow_missing – разрешить отсутствие заголовка. По умолчанию: false.

fail_if_header_not_matches

Проверка считается неуспешной, если в ответе отсутствует заголовок, значение которого удовлетворяет регулярному выражению.

    header – имя заголовка, который проверяется.

    regexp – регулярное выражение, которое проверяется в значении заголовка.

    allow_missing – разрешить отсутствие заголовка. По умолчанию: false.

basic_auth

    username – имя пользователя, которое используется для авторизации на проверяемом сайте.

    password – пароль, который используется для авторизации на проверяемом сайте.

bearer_token

Токен для bearer авторизации.

bearer_token_file

Файл, который содержит токен для bearer авторизации.

proxy_url

Адрес proxy сервера, если проверку необходимо выполнить через proxy сервер.

body

Body, которое передается вместе с запросом.

tls_config

    insecure_skip_verify – проверять ли валидность сертификата. Значение по умолчанию: false
    ca_file – путь к файлу с корневыми сертификатами.
    cert_file – путь к файлу с клиентским сертификатом.
    key_file – путь к файлу с клиентским ключом.
    server_name – строка для проверки имени сервера.
